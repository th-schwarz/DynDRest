<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>codes.thischwa</groupId>
    <artifactId>dyndrest</artifactId>
    <version>0.9.0-SNAPSHOT</version>
    <name>DynDRest</name>
    <description>A simple REST-service for dynamic DNS.</description>
    <url>https://github.com/th-schwarz/DynDRest</url>
    <inceptionYear>2022</inceptionYear>
    <packaging>jar</packaging>

    <properties>
        <java.version>17</java.version>
        <file.encoding>UTF-8</file.encoding>
        <project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${file.encoding}</project.reporting.outputEncoding>

        <springdoc.version>2.3.0</springdoc.version>
        <domainrobot.version>0.2.8</domainrobot.version>
        <dnsjava.version>3.5.3</dnsjava.version>
        <janino.version>3.1.11</janino.version>

        <fakerepo.dir>${project.basedir}/fake-repo</fakerepo.dir>

        <sonar.organization>th-schwarz</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.sourceEncoding>${file.encoding}</sonar.sourceEncoding>
        <sonar.exclusions>
            src/main/java/codes/thischwa/dyndrest/service/BackupService.java,
            src/main/java/codes/thischwa/dyndrest/config/MvcConfig.java,
            src/main/java/codes/thischwa/dyndrest/config/SecurityConfig.java,
            src/main/java/codes/thischwa/dyndrest/config/DatabaseConfig.java,
            src/main/java/codes/thischwa/dyndrest/Starter.java
        </sonar.exclusions>

        <!-- openapi generation -->
        <openapi.outputDir>${project.basedir}/docs/openapi</openapi.outputDir>
        <openapi.outputFile.extless>openapi</openapi.outputFile.extless>
        <openapi.outputFile>${openapi.outputFile.extless}.yaml</openapi.outputFile>

        <!-- checkstyle -->
        <checkstyle.version>10.8.1</checkstyle.version>
        <checkstyle.plugin.version>3.3.1</checkstyle.plugin.version>
        <checkstyle.config.location>google_checks.xml</checkstyle.config.location>
        <checkstyle.suppressions.location>
            ${project.basedir}/src/checkstyle/checkstyle-suppressions.xml
        </checkstyle.suppressions.location>
        <checkstyle.includeTestResources>false</checkstyle.includeTestResources>
        <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
        <checkstyle.failOnViolation>false</checkstyle.failOnViolation>
        <checkstyle.propertyExpansion>config_loc=${basedir}
        </checkstyle.propertyExpansion>
        <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
        <linkXRef>false</linkXRef>
    </properties>

    <repositories>
        <repository>
            <!-- DO NOT set id to "local" because it is reserved by Maven -->
            <!-- This is a fake maven repo for the Domainrobot SDK. -->
            <id>fake-repo</id>
            <name>Just a fake repository.</name>
            <url>file://${fakerepo.dir}</url>
        </repository>
    </repositories>

    <issueManagement>
        <url>https://github.com/th-schwarz/DynDRest/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <scm>
        <developerConnection>scm:git:git@github.com:th-schwarz/dyndrest</developerConnection>
        <connection>scm:git:git@github.com:th-schwarz/dyndrest</connection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>${dnsjava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.domainrobot</groupId>
            <artifactId>sdk-model</artifactId>
            <version>${domainrobot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.domainrobot</groupId>
            <artifactId>sdk-client</artifactId>
            <version>${domainrobot.version}</version>
        </dependency>
        <dependency>
            <!-- required for conditional processing in logback -->
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>

            <plugin>
                <!-- deploy isn't desired, currently no repo available -->
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <!-- build the fat jar -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <!-- checkstyle -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <executions>
                    <execution>
                        <id>checkstyle-validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- generates the code coverage report for sonar cube -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report-code-coverage</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>XML</formats>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>opendoc</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- starts spring boot for generating the openapi docu -->
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <commandlineArguments>
                                --spring.config.import=classpath:/application-opendoc.yml
                            </commandlineArguments>
                            <executable>true</executable>
                            <includeSystemScope>true</includeSystemScope>
                            <jvmArguments>
                            </jvmArguments>
                            <profiles>
                                <profile>opendoc</profile>
                            </profiles>
                        </configuration>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- generates the openapi docu -->
                        <groupId>org.springdoc</groupId>
                        <artifactId>springdoc-openapi-maven-plugin</artifactId>
                        <version>1.4</version>
                        <configuration>
                            <apiDocsUrl>http://localhost:8080/v3/api-docs.yaml</apiDocsUrl>
                            <outputDir>${openapi.outputDir}</outputDir>
                            <outputFileName>${openapi.outputFile}</outputFileName>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-openapi</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <phase>integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <developers>
        <developer>
            <email>osp AT thischwa.codes</email>
            <id>th-schwarz</id>
            <name>Thilo Schwarz</name>
            <roles>
                <role>Head Project Manager</role>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
            <url>https://www.thischwa.codes</url>
        </developer>
    </developers>
</project>
