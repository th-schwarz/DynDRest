<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.2</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>
  <groupId>codes.thischwa</groupId>
  <artifactId>dyndrest</artifactId>
  <version>0.4.3-SNAPSHOT</version>
  <name>DynDRest</name>
  <description>A simple REST-service for dynamic DNS.</description>
  <url>https://github.com/th-schwarz/DynDRest</url>
  <inceptionYear>2022</inceptionYear>
  <packaging>jar</packaging>

  <properties>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <springdoc.version>2.0.4</springdoc.version>
    <domainrobot.version>0.2.8</domainrobot.version>
    <dnsjava.version>3.5.2</dnsjava.version>
    <janino.version>3.1.9</janino.version>

    <sonar.organization>th-schwarz</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>

    <openapi.outputDir>${project.build.directory}</openapi.outputDir>
    <openapi.outputFile.extless>openapi</openapi.outputFile.extless>
    <openapi.outputFile>${openapi.outputFile.extless}.yaml</openapi.outputFile>

    <fakerepo.dir>${project.basedir}/fake-repo</fakerepo.dir>

    <!-- checkstyle -->
    <checkstyle.version>10.8.1</checkstyle.version>
    <checkstyle.plugin.version>3.2.1</checkstyle.plugin.version>
    <checkstyle.config.location>google_checks.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>
      ${project.basedir}/src/checkstyle/checkstyle-suppressions.xml
    </checkstyle.suppressions.location>
    <checkstyle.includeTestResources>false</checkstyle.includeTestResources>
    <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
    <checkstyle.propertyExpansion>config_loc=${basedir}
    </checkstyle.propertyExpansion>
    <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
    <linkXRef>false</linkXRef>
  </properties>

  <repositories>
    <repository>
      <!-- DO NOT set id to "local" because it is reserved by Maven -->
      <!-- This is a fake maven repo for the Domainrobot SDK. -->
      <id>fake-repo</id>
      <name>Just a fake repository.</name>
      <url>file://${fakerepo.dir}</url>
    </repository>
  </repositories>

  <issueManagement>
    <url>https://github.com/th-schwarz/DynDRest/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:th-schwarz/dyndrest</developerConnection>
    <connection>scm:git:git@github.com:th-schwarz/dyndrest</connection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-to-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>dnsjava</groupId>
      <artifactId>dnsjava</artifactId>
      <version>${dnsjava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.domainrobot</groupId>
      <artifactId>sdk-model</artifactId>
      <version>${domainrobot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.domainrobot</groupId>
      <artifactId>sdk-client</artifactId>
      <version>${domainrobot.version}</version>
    </dependency>
    <dependency>
      <!-- required for conditional processing in logback -->
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>${janino.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
      <version>${springdoc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>

      <plugin>
        <!-- build the fat jar -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <executable>true</executable>
        </configuration>
      </plugin>

      <plugin>
        <!-- checkstyle -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle.plugin.version}</version>
        <executions>
          <execution>
            <id>checkstyle-validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <!-- generates the code coverage report for sonar cube -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report-code-coverage</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>XML</formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>opendoc</id>
      <build>
        <plugins>
          <plugin>
            <!-- starts spring boot for generating the openapi docu -->
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <commandlineArguments>--swagger.enabled=true
                --springdoc.writer-with-default-pretty-printer=true
                --springdoc.api-docs.enabled=true --dyndrest.host-validation-enable=false
                --server.port=8080
              </commandlineArguments>
              <executable>true</executable>
              <includeSystemScope>true</includeSystemScope>
              <jvmArguments>-Dspring.application.admin.enabled=true
                -Dspring.config.import=file:target/test-classes/application.yml
              </jvmArguments>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>start</goal>
                </goals>
                <id>pre-integration-test</id>
              </execution>
              <execution>
                <goals>
                  <goal>stop</goal>
                </goals>
                <id>post-integration-test</id>
              </execution>
            </executions>
            <groupId>org.springframework.boot</groupId>
          </plugin>
          <plugin>
            <!-- generates the openapi docu -->
            <artifactId>springdoc-openapi-maven-plugin</artifactId>
            <configuration>
              <apiDocsUrl>http://localhost:8080/v3/api-docs.yaml</apiDocsUrl>
              <outputFileName>${openapi.outputFile}</outputFileName>
            </configuration>
            <groupId>org.springdoc</groupId>
            <version>1.4</version>
            <executions>
              <execution>
                <goals>
                  <goal>generate</goal>
                </goals>
                <id>generate-openapi</id>
                <phase>integration-test</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- converts the openapi docu to html -->
            <artifactId>swagger-codegen-maven-plugin</artifactId>
            <groupId>io.swagger.codegen.v3</groupId>
            <version>3.0.42</version>
            <executions>
              <execution>
                <configuration>
                  <inputSpec>${openapi.outputDir}/${openapi.outputFile}</inputSpec>
                  <language>html</language>
                  <output>${project.basedir}/docs/openapi</output>
                </configuration>
                <goals>
                  <goal>generate</goal>
                </goals>
                <id>export-to-html-doc</id>
                <phase>integration-test</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <developers>
    <developer>
      <email>osp AT thischwa.codes</email>
      <id>th-schwarz</id>
      <name>Thilo Schwarz</name>
      <roles>
        <role>Head Project Manager</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
      <url>https://www.thischwa.codes</url>
    </developer>
  </developers>
</project>
